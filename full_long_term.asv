
load('settings.mat');


wind_input.z = 60;
wind_input.U = 30;
wind_input.sigmau = 5;
wind_input.sigmaw = 2.5;

[ std,stddot ] = short_term_response( settings,wind_input );

Tshort = 600;
x = 0.5;

[ Fx_d ] = short_term_extreme( std,stddot,Tshort,x );


% short-term extreme distribution
c = 1;
for i = 0.01:0.01:2
    
    [ Fx_d(c) ] = short_term_extreme( std,stddot,Tshort,i );
    x_axis(c) = i;
    c = c+1;
end

figure; plot(x_axis,Fx_d);

% joint pdf of turbulence

mu_dash(1) = 0.122+0.039*wind_input.U;
mu_dash(2) = -0.657+0.03*wind_input.U;
sigma_dash(1) = 0.3159;
sigma_dash(2) = 0.3021;
rhoY = 0.8148;
y = [wind_input.sigmau wind_input.sigmaw];


y1 = 0.1:0.1:10;
y2 = 0.05:0.05:3;

[Xplot, Yplot] = meshgrid(y1,y2);


for i = 1:length(y1)
    for j = 1:length(y2)
        
        [ fturb_joint(j,i) ] = joint_pdf_turbulence( [Xplot(j,i),Yplot(j,i)], mu_dash, sigma_dash, rhoY );
        
    end
end

figure;
mesh(Xplot,Yplot,real(fturb_joint));
view([1.3 1 2.2]);
h = gca;
h.XLabel.String = '\sigma_{u} (m/s)';
h.YLabel.String = '\sigma_{w} (m/s)';
h.ZLabel.String = 'Prob. density';


% Joint pdf of all environmental parameters


Uvals = 0.5:0.5:20;
sigmauvals = 0.1:0.1:15;
sigmawfix = 2;


turb = [sigmauvals' repmat(sigmawfix,[length(sigmauvals),1])];
turbcell = mat2cell(turb,[ones(1,length(sigmauvals))], [2]);

turbpdf = cellfun(@(x) joint_pdf_turbulence(x, mu_dash, sigma_dash, rhoY) , turbcell);


[TurbPDF, Yplot] = meshgrid(turbpdf,Uvals);

[Xplot, ~] = meshgrid(sigmauvals,Uvals);

% joint_full_env = TurbPDF.*wblpdf(Yplot,1.4063,0.8616);

joint_full_env = TurbPDF.*lognpdf(Yplot,1.0967,0.4894);

figure;
mesh(Xplot,Yplot,real(joint_full_env));
view([1.3 1 2.2]);
h = gca;
h.XLabel.String = '\sigma_{u} (m/s)';
h.YLabel.String = 'U (m/s)';
h.ZLabel.String = 'Prob. density';

resp = 0.8;

LTfun = @(x,y,z) LT_int(x,y,z,resp);

dbstop if error

% dummy = integral3(LTfun,0,10,0,4,0,2)


%%

Uint = 1:1:20;
sigmauint = 0.1:0.1:5;
sigmawint = 0.1:0.1:3;

flt_int = 0;
resp = 0.8;

for i = 1:length(Uint)-1
    for j = 1:length(sigmauint)-1
        for k = 1:length(sigmawint)-1
            
            dU = Uint(i+1) - Uint(i);
            dsigmau = sigmauint(i+1) - sigmauint(i);
            dsigmaw = sigmawint(i+1) - sigmawint(i);
            
            Uav =  (Uint(i+1) - Uint(i)) /2;
            sigmauav =  (sigmauint(i+1) - sigmauint(i)) /2;
            Uav =  (sigmawint(i+1) - sigmawint(i)) /2;
            
            [ int ] = LT_int( U,sigmau,sigmaw,resp );
            
            flt_int = flt_int + int;
    













